TICKET #667834
Data: 12/02/2025
Prioridade: Média
Status: Resolvido

PROBLEMA:
Erro de parsing de datas em documentos CSV importados. Sistema falhava ao processar arquivos CSV com datas em formato internacional (MM/DD/YYYY vs DD/MM/YYYY).

Erro:
```
Error: Invalid date format in CSV file
at parseCSVDate (document-parser.ts:45)
Failed to import document.csv
```

Contexto:
- Afeta funcionalidade de import de documentos CSV
- 40% dos imports falhando
- Usuários tentando importar planilhas exportadas de Excel US e Excel BR
- Formatos misturados: "12/31/2024" (US) vs "31/12/2024" (BR)

ANÁLISE:
O parser estava assumindo apenas formato brasileiro:

```typescript
// Código problemático
function parseCSVDate(dateString: string): Date {
  const [day, month, year] = dateString.split('/');
  return new Date(year, month - 1, day); // ❌ Assume DD/MM/YYYY
}
```

Problema: datas ambíguas como "01/02/2024" eram interpretadas incorretamente.

SOLUÇÃO IMPLEMENTADA:
1. Adicionada detecção inteligente de formato:
```typescript
function detectDateFormat(dateString: string): 'US' | 'BR' | 'ISO' {
  // ISO format (YYYY-MM-DD)
  if (/^\d{4}-\d{2}-\d{2}/.test(dateString)) {
    return 'ISO';
  }

  const parts = dateString.split('/');
  if (parts.length !== 3) return 'BR'; // fallback

  const [first, second, year] = parts.map(Number);

  // Se primeiro número > 12, é dia (formato BR)
  if (first > 12) return 'BR';

  // Se segundo número > 12, é dia (formato US)
  if (second > 12) return 'US';

  // Se ambíguo, usa configuração do sistema
  return Intl.DateTimeFormat().resolvedOptions().locale.startsWith('en')
    ? 'US'
    : 'BR';
}

function parseCSVDate(dateString: string): Date {
  const format = detectDateFormat(dateString);

  if (format === 'ISO') {
    return new Date(dateString);
  }

  const [first, second, year] = dateString.split('/').map(Number);

  if (format === 'US') {
    return new Date(year, first - 1, second); // MM/DD/YYYY
  } else {
    return new Date(year, second - 1, first); // DD/MM/YYYY
  }
}
```

2. Adicionada opção manual de formato no upload:
```typescript
interface CSVImportOptions {
  dateFormat?: 'auto' | 'US' | 'BR' | 'ISO';
  delimiter?: ',' | ';' | '\t';
}
```

3. Preview de datas antes de confirmar import

RESULTADO:
- Taxa de sucesso de import subiu de 60% para 98%
- Suporta múltiplos formatos automaticamente
- Usuário pode forçar formato se necessário
- Preview evita surpresas

ARQUIVOS MODIFICADOS:
- lib/documents/csv-parser.ts (refatorado)
- lib/utils/date-detector.ts (criado)
- components/document-upload-form.tsx (adicionado seletor de formato)

MELHORIAS FUTURAS:
- Suportar formatos europeus (DD.MM.YYYY)
- Detecção de timezone em timestamps completos
- Validação de datas impossíveis (31/02/2024)
